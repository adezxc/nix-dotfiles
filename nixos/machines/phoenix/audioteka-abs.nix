# Auto-generated using compose2nix v0.3.2-pre.
{
  pkgs,
  lib,
  config,
  ...
}: {
  # Runtime
  virtualisation.podman = {
    enable = true;
    autoPrune.enable = true;
    dockerCompat = true;
  };

  # Enable container name DNS for all Podman networks.
  networking.firewall.interfaces = let
    matchAll =
      if !config.networking.nftables.enable
      then "podman+"
      else "podman*";
  in {
    "${matchAll}".allowedUDPPorts = [53];
  };

  virtualisation.oci-containers.backend = "podman";

  # Containers
  virtualisation.oci-containers.containers."audioteka-abs" = {
    image = "lakafior/audioteka-abs";
    environment = {
      "ADD_AUDIOTEKA_LINK_TO_DESCRIPTION" = "true";
      "LANGUAGE" = "pl";
    };
    ports = [
      "3001:3001/tcp"
    ];
    log-driver = "journald";
    extraOptions = [
      "--network-alias=audioteka-abs"
      "--network=audioteka-abs_default"
    ];
  };
  systemd.services."podman-audioteka-abs" = {
    serviceConfig = {
      Restart = lib.mkOverride 90 "always";
    };
    after = [
      "podman-network-audioteka-abs_default.service"
    ];
    requires = [
      "podman-network-audioteka-abs_default.service"
    ];
    partOf = [
      "podman-compose-audioteka-abs-root.target"
    ];
    wantedBy = [
      "podman-compose-audioteka-abs-root.target"
    ];
  };

  # Networks
  systemd.services."podman-network-audioteka-abs_default" = {
    path = [pkgs.podman];
    serviceConfig = {
      Type = "oneshot";
      RemainAfterExit = true;
      ExecStop = "podman network rm -f audioteka-abs_default";
    };
    script = ''
      podman network inspect audioteka-abs_default || podman network create audioteka-abs_default
    '';
    partOf = ["podman-compose-audioteka-abs-root.target"];
    wantedBy = ["podman-compose-audioteka-abs-root.target"];
  };

  # Root service
  # When started, this will automatically create all resources and start
  # the containers. When stopped, this will teardown all resources.
  systemd.targets."podman-compose-audioteka-abs-root" = {
    unitConfig = {
      Description = "Root target generated by compose2nix.";
    };
    wantedBy = ["multi-user.target"];
  };
}
